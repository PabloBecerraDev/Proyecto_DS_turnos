# Generated by Django 5.1.2 on 2025-04-24 18:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nombre', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='nombre_invalido', message='Solo se permiten letras', regex='^[a-zA-Z ]+$')])),
                ('cedula', models.PositiveBigIntegerField(unique=True, validators=[django.core.validators.RegexValidator(code='cedula_invalida', message='No es un numero de documento valido', regex='^\\d{7,10}$')], verbose_name='Cedula de ciudadania')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Correo electronico invalido')], verbose_name='Correo electronico')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='numero_invalido', message='No es un numero de celular valido', regex='^\\d{10,15}$')], verbose_name='Numero de celular')),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('has_priority', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Actor',
                'verbose_name_plural': 'Actores',
                'ordering': ['id'],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('code', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'Trabajador',
                'verbose_name_plural': 'Trabajadores',
                'ordering': ['id'],
            },
            bases=('users.user',),
        ),
    ]
